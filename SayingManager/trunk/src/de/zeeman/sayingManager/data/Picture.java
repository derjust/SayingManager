package de.zeeman.sayingManager.data;
// default package
// Generated 25.10.2007 23:00:25 by Hibernate Tools 3.2.0.b11


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Pictures generated by hbm2java
 */
@Entity
@Table(name="Pictures"
)
public class Picture  implements java.io.Serializable {
	private static final long serialVersionUID = 197296242511867424L;
	private Integer id;
     private byte[] data;
     private int length;
     private String mime;
     private Set<Author> authors = new HashSet<Author>(0);

    public Picture() {
    }

	
    public Picture(byte[] data, int length, String mime) {
        this.data = data;
        this.length = length;
        this.mime = mime;
    }
    public Picture(byte[] data, int length, String mime, Set<Author> authors) {
       this.data = data;
       this.length = length;
       this.mime = mime;
       this.authors = authors;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="Id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
    @Column(name="Data", nullable=false)
    public byte[] getData() {
        return this.data;
    }
    
    public void setData(byte[] data) {
        this.data = data;
    }
    
    @Column(name="Length", nullable=false)
    public int getLength() {
        return this.length;
    }
    
    public void setLength(int length) {
        this.length = length;
    }
    
    @Column(name="Mime", nullable=false, length=64)
    public String getMime() {
        return this.mime;
    }
    
    public void setMime(String mime) {
        this.mime = mime;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pictures")
    public Set<Author> getAuthorses() {
        return this.authors;
    }
    
    public void setAuthorses(Set<Author> authors) {
        this.authors = authors;
    }




}


