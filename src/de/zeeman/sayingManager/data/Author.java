package de.zeeman.sayingManager.data;
// default package
// Generated 25.10.2007 23:00:25 by Hibernate Tools 3.2.0.b11

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Authors generated by hbm2java
 */
@Entity
@Table(name = "Authors", uniqueConstraints = @UniqueConstraint(columnNames = {
		"Lastname", "Firstname" }))
public class Author implements java.io.Serializable {
	private static SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
	private static final long serialVersionUID = 1128553298819539190L;
	private Integer id;
	private Picture picture;
	private String lastname;
	private String firstname;
	private Date birthday;
	private Date obit;
	private String work;
	private Set<Saying> sayingses = new HashSet<Saying>(0);

	public Author() {
	}

	public Author(String lastname, String firstname) {
		this.lastname = lastname;
		this.firstname = firstname;
	}

	public Author(Picture pictures, String lastname, String firstname,
			Date birthday, Date obit, String work, Set<Saying> sayingses) {
		this.picture = pictures;
		this.lastname = lastname;
		this.firstname = firstname;
		this.birthday = birthday;
		this.obit = obit;
		this.work = work;
		this.sayingses = sayingses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PictureId")
	public Picture getPictures() {
		return this.picture;
	}

	public void setPictures(Picture pictures) {
		this.picture = pictures;
	}

	@Column(name = "Lastname", nullable = false, length = 128)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "Firstname", nullable = false, length = 128)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Birthday", length = 0)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Obit", length = 0)
	public Date getObit() {
		return this.obit;
	}

	public void setObit(Date obit) {
		this.obit = obit;
	}

	@Column(name = "Work", length = 45)
	public String getWork() {
		return this.work;
	}

	public void setWork(String work) {
		this.work = work;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "authors")
	public Set<Saying> getSayingses() {
		return this.sayingses;
	}

	public void setSayingses(Set<Saying> sayingses) {
		this.sayingses = sayingses;
	}

	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(this.getFirstname()).append(" ").append(this.getLastname());
		if (this.getBirthday() != null) {
			sb.append(", * ").append(sdf.format(getBirthday()));
		}
		if (this.getObit() != null) {
			sb.append(", \u8224 ").append(sdf.format(getObit()));
		}
		if (this.getWork() != null) {
			sb.append(", ").append(this.getWork());
		}
		return sb.toString();
	}

}
